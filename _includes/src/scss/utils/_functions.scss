@use 'sass:math';
@use 'sass:meta';

$base-font-size: 16px;

// Unit functions
@function px-to-rel($value) {
  $rel-value: math.div($value, $base-font-size);

  @return $rel-value;
}

@function px-to-em($value) {
  @return px-to-rel($value) * 1em;
}

@function px-to-rem($value) {
  @return px-to-rel($value) * 1rem;
}

@function strip-unit($number) {
  @if meta.type-of($number) == 'number' and not math.unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function responsive-clamp(
  $min,
  $min-unitless,
  $max-unitless,
  $breakpoint,
  $max,
  $positive-values: false
) {
  @if $positive-values {
    @return responsive-clamp-positive(
      $min,
      $min-unitless,
      $max-unitless,
      $breakpoint,
      $max
    );
  } @else {
    @return responsive-clamp-negative(
      $min,
      $min-unitless,
      $max-unitless,
      $breakpoint,
      $max
    );
  }
}

@function responsive-clamp-positive(
  $min,
  $min-unitless,
  $max-unitless,
  $breakpoint,
  $max
) {
  // prettier-ignore
  @return clamp(
    $min,
    calc(
      #{$min} + ($max-unitless - $min-unitless) * max(0, (100vw - $breakpoint)) / (0.1)
    ),
    $max
  );
}

@function responsive-clamp-negative(
  $min,
  $min-unitless,
  $max-unitless,
  $breakpoint,
  $max
) {
  @return clamp(
    $min,
    calc(
      #{$min} + ($max-unitless - $min-unitless) * (100vw - $breakpoint) / (0.1)
    ),
    $max
  );
}
